@page "/registrarse"
@layout LoginLayout

@inject IUsuarioServicio _usuarioServicio
@inject NavigationManager _navServicio
@inject IToastService toastService

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-7">
            <div class="card rounded-lg mt-5">
                <div class="card-header"><h3 class="text-center font-weight-light my-4">Crear Cuenta</h3></div>
                <img src="images/marishop.png" alt="Logo" class="marihuana" />
                <div class="card-body">

                    <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
                        <DataAnnotationsValidator></DataAnnotationsValidator>

                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputEmail" type="text" placeholder="name@example.com" @bind-value="modelo.NombreCompleto" autocomplete="off" />
                            <label for="inputEmail">Nombre Completo</label>
                            <ValidationMessage For="@(()=>modelo.NombreCompleto)" />
                        </div>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputEmail" type="email" placeholder="name@example.com" @bind-value="modelo.Correo" autocomplete="off" />
                            <label for="inputEmail">Correo</label>
                            <ValidationMessage For="@(()=>modelo.Correo)" />
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <input class="form-control" id="inputPassword" type="password" placeholder="Create a password" @bind-value="modelo.Clave" autocomplete="off" />
                                    <label for="inputPassword">Contraseña</label>
                                    <ValidationMessage For="@(()=>modelo.Clave)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating mb-3 mb-md-0">
                                    <input class="form-control" id="inputPasswordConfirm" type="password" placeholder="Confirm password" @bind-value="modelo.ConfirmarClave" autocomplete="off" />
                                    <label for="inputPasswordConfirm">Confirmar Contraseña</label>
                                    <ValidationMessage For="@(()=>modelo.ConfirmarClave)" />
                                </div>
                            </div>
                        </div>
                        <div class="mt-4 mb-0">
                            <div class="d-grid"><button class="btn btn-primary btn-block" type="submit">Registrarse</button></div>
                        </div>
                    </EditForm>

                </div>
                <div class="card-footer text-center py-3">
                    <div class="small"><a href="/login">Tienes una cuenta? ir a login</a></div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .marihuana {
        width: 220px;
        display: block;
        margin: 0 auto;
    }

    .card {
        background-color: rgba(183, 204, 184, 0.5); /* Verde claro con opacidad */
        border: none; /* Eliminar borde si lo deseas */
    }

    body {
        background-image: url('/images/bareta.jpg'); /* Ruta desde la raíz del servidor */
        background-size: cover; /* Hace que la imagen cubra toda el área del fondo */
        background-position: center; /* Centra la imagen */
        background-attachment: fixed; /* Hace que la imagen no se mueva al hacer scroll */
        margin: 0;
        padding: 0;
        height: 100vh; /* Asegura que el fondo cubra toda la altura de la ventana */
    }

    .btn-primary {
        background-color: #4a6f58; /* Verde oscuro */
        border-color: #4a6f58; /* Verde oscuro */
    }

    a {
        color: #4a6f58; /* Verde oscuro */
        text-decoration: none; /* Elimina el subrayado */
    }

    .btn-primary:hover {
        background-color: #3b5a47;
        color: white
    }

    a {
        color: #4a6f58; /* Verde oscuro */
        text-decoration: none; /* Elimina el subrayado */
        text-align: center
    }

        a:hover {
            color: #3b5a47; /* Verde más oscuro al pasar el ratón */
        }

</style>

@code {
    private UsuarioDTO modelo = new UsuarioDTO();

    private async Task GuardarCambios()
    {
        if(modelo.Clave != modelo.ConfirmarClave)
        {
            toastService.ShowWarning("Las contraseñas no coinciden");
            return;
        }

        modelo.Rol = "Cliente";
        var response = await _usuarioServicio.Crear(modelo);
        if (response.EsCorrecto)
        {
            toastService.ShowSuccess("Su cuenta ha sido creada");
            _navServicio.NavigateTo("/login");
        }
        else
        {
            toastService.ShowError("No se pudo crear su cuenta, intente mas tarde");
        }

    }

}
