@page "/login"
@layout LoginLayout

@using Ecommerce.WebAssembly.Extensiones
@using Microsoft.AspNetCore.Components.Authorization
@inject IUsuarioServicio _usuarioServicio
@inject NavigationManager _navServicio
@inject IToastService toastService
@inject AuthenticationStateProvider autenticacionProvider

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-5">
            <div class="card rounded-lg mt-5">
                <div class="card-header"><h3 class="text-center font-weight-light my-4">Login</h3></div>
                <a class="navbar-brand" runat="server" href="#">
                    <img src="images/marishop.png" alt="Logo" class="marihuana" />
                </a>
                <div class="card-body">
                    <EditForm Model="modelo" OnValidSubmit="Iniciar">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputEmail" type="email" placeholder="admin@example.com" @bind-value="modelo.Correo" autocomplete="off" />
                            <label for="inputEmail">Correo</label>
                            <ValidationMessage For="@(()=>modelo.Correo)" />
                        </div>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputPassword" type="password" placeholder="123" @bind-value="modelo.Clave" autocomplete="off" />
                            <label for="inputPassword">Contraseña</label>
                            <ValidationMessage For="@(()=>modelo.Clave)" />
                        </div>
                        
                        <div class="small"><a href="/registrarse">No tienes una cuenta? Registrate!</a></div>
                        <div class="d-grid gap-1 mt-4 mb-0">
                            <button class="btn btn-primary" type="submit">Ingresar</button>
                        </div>
                    </EditForm>
                </div>
                <div class="card-footer text-center py-3">
                   
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .marihuana {
        width: 220px;
        display: block;
        margin: 0 auto;
    }

    .card {
        background-color: rgba(183, 204, 184, 0.5); /* Verde claro con opacidad */
        border: none; /* Eliminar borde si lo deseas */
    }

    body {
        background-image: url('/images/bareta.jpg'); /* Ruta desde la raíz del servidor */
        background-size: cover; /* Hace que la imagen cubra toda el área del fondo */
        background-position: center; /* Centra la imagen */
        background-attachment: fixed; /* Hace que la imagen no se mueva al hacer scroll */
        margin: 0;
        padding: 0;
        height: 100vh; /* Asegura que el fondo cubra toda la altura de la ventana */
    }

    .btn-primary {
        background-color: #4a6f58; /* Verde oscuro */
        border-color: #4a6f58; /* Verde oscuro */
    }a {
    color: #4a6f58; /* Verde oscuro */
    text-decoration: none; /* Elimina el subrayado */
}

    .btn-primary:hover {
    background-color: #3b5a47;
    color: white
}

    a {
        color: #4a6f58; /* Verde oscuro */
        text-decoration: none; /* Elimina el subrayado */
        text-align: center
    }

        a:hover {
            color: #3b5a47; /* Verde más oscuro al pasar el ratón */
        }


</style>


@code {
    private LoginDTO modelo = new LoginDTO();

    private async Task Iniciar()
    {
        var response = await _usuarioServicio.Autorizacion(modelo);
        if (response.EsCorrecto)
        {
            SesionDTO sesion = (SesionDTO)response.Resultado!;

            var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(sesion);

            if(sesion.Rol.ToLower() == "cliente")
            {
                _navServicio.NavigateTo("/catalogo");
            }
            else
            {
                _navServicio.NavigateTo("/dashboard");
            }
        }
        else
        {
            toastService.ShowWarning(response.Mensaje!);
        }
    }

}
